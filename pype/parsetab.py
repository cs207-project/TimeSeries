
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '55C53B9434ED5FC68BBE31AE8D09ED67'
    
_lr_action_items = {'OUTPUT':([14,],[19,]),'ASSIGN':([14,],[22,]),'OP_MUL':([14,],[20,]),'OP_ADD':([14,],[25,]),'$end':([2,4,5,6,8,9,18,27,],[-1,0,-4,-5,-2,-3,-6,-7,]),'NUMBER':([10,12,13,15,16,17,20,23,24,25,26,28,33,34,35,37,38,39,40,41,42,43,47,48,49,50,52,53,54,55,57,],[13,-28,-27,-26,-9,13,13,13,13,13,13,-8,-13,13,-30,-11,13,13,13,-21,13,13,-12,-29,-24,-10,-23,-20,-22,-25,-19,]),'IMPORT':([1,],[7,]),'RBRACE':([12,13,15,16,17,28,33,37,41,47,49,50,52,53,54,55,57,],[-28,-27,-26,-9,27,-8,-13,-11,-21,-12,-24,-10,-23,-20,-22,-25,-19,]),'OP_SUB':([14,],[23,]),'LPAREN':([0,2,5,6,8,9,10,12,13,15,16,17,18,19,20,21,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,50,52,53,54,55,57,58,],[1,1,-4,-5,-2,-3,14,-28,-27,-26,-9,14,-6,29,14,29,14,14,14,14,-7,-8,-17,29,-15,-13,14,-30,29,-11,14,14,14,-21,14,14,-14,-12,-29,-24,-10,-23,-20,-22,-25,-19,-16,]),'ID':([3,7,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,57,58,],[10,11,15,-28,-27,24,-26,-9,15,30,15,30,38,15,15,15,15,-8,45,-17,30,-15,-13,15,-30,30,-11,15,15,15,-21,15,15,56,-18,-14,-12,-29,-24,-10,-23,-20,-22,-25,-19,-16,]),'STRING':([10,12,13,15,16,17,20,23,24,25,26,28,33,34,35,37,38,39,40,41,42,43,47,48,49,50,52,53,54,55,57,],[12,-28,-27,-26,-9,12,12,12,12,12,12,-8,-13,12,-30,-11,12,12,12,-21,12,12,-12,-29,-24,-10,-23,-20,-22,-25,-19,]),'INPUT':([14,],[21,]),'LBRACE':([0,2,5,6,8,9,18,27,],[3,3,-4,-5,-2,-3,-6,-7,]),'OP_DIV':([14,],[26,]),'RPAREN':([11,12,13,15,19,21,24,30,31,32,33,34,35,36,37,39,40,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,],[18,-28,-27,-26,33,37,41,-17,47,-15,-13,49,-30,50,-11,52,53,-21,54,55,-14,-12,-29,-24,-10,57,-23,-20,-22,-25,58,-19,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parameter_list':([20,23,24,25,26,],[34,39,40,42,43,]),'statement_list':([0,],[2,]),'declaration_list':([19,21,],[31,36,]),'expression':([10,17,20,23,24,25,26,34,38,39,40,42,43,],[16,28,35,35,35,35,35,48,51,48,48,48,48,]),'expression_list':([10,],[17,]),'type':([29,],[44,]),'program':([0,],[4,]),'declaration':([19,21,31,36,],[32,32,46,46,]),'import_statement':([0,2,],[5,9,]),'component':([0,2,],[6,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',12),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',15),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',44),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',45),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',52),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',53),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',60),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',61),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',70),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',71),
  ('type -> ID','type',1,'p_type','parser.py',79),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',83),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',87),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',96),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',100),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',104),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',108),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',116),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',120),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',124),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',125),
]
