
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D7D1BCF469A7160DABB9E0C3456A50E8'
    
_lr_action_items = {'RBRACE':([13,14,15,16,17,28,32,38,41,47,49,50,51,53,54,55,57,],[-28,-9,27,-26,-27,-8,-13,-21,-11,-12,-23,-24,-20,-10,-25,-22,-19,]),'LPAREN':([0,2,5,6,8,9,10,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,50,51,53,54,55,57,58,],[3,-5,3,-4,12,-2,-3,-28,-9,12,-26,-27,-6,31,12,12,12,31,12,12,-7,-8,-17,-15,-13,31,-30,12,12,12,-21,12,31,-11,12,12,-14,-12,-29,-23,-24,-20,-10,-25,-22,-19,-16,]),'STRING':([8,13,14,15,16,17,20,21,22,25,26,28,32,34,35,36,37,38,39,41,42,43,47,48,49,50,51,53,54,55,57,],[13,-28,-9,13,-26,-27,13,13,13,13,13,-8,-13,-30,13,13,13,-21,13,-11,13,13,-12,-29,-23,-24,-20,-10,-25,-22,-19,]),'OP_ADD':([12,],[26,]),'LBRACE':([0,2,5,6,9,10,18,27,],[4,-5,4,-4,-2,-3,-6,-7,]),'OP_MUL':([12,],[21,]),'ASSIGN':([12,],[23,]),'ID':([4,7,8,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,57,58,],[8,11,16,22,-28,-9,16,-26,-27,29,16,16,16,39,29,16,16,-8,-17,-15,44,-13,29,-30,16,16,16,-21,16,29,-11,16,16,-18,56,-14,-12,-29,-23,-24,-20,-10,-25,-22,-19,-16,]),'OUTPUT':([12,],[19,]),'IMPORT':([3,],[7,]),'$end':([1,2,5,6,9,10,18,27,],[0,-5,-1,-4,-2,-3,-6,-7,]),'INPUT':([12,],[24,]),'OP_SUB':([12,],[20,]),'OP_DIV':([12,],[25,]),'RPAREN':([11,13,16,17,19,22,24,29,30,32,33,34,35,36,37,38,40,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,],[18,-28,-26,-27,32,38,41,-17,-15,-13,47,-30,49,50,51,-21,53,-11,54,55,-14,-12,-29,-23,-24,-20,57,-10,-25,-22,58,-19,-16,]),'NUMBER':([8,13,14,15,16,17,20,21,22,25,26,28,32,34,35,36,37,38,39,41,42,43,47,48,49,50,51,53,54,55,57,],[17,-28,-9,17,-26,-27,17,17,17,17,17,-8,-13,-30,17,17,17,-21,17,-11,17,17,-12,-29,-23,-24,-20,-10,-25,-22,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'component':([0,5,],[2,9,]),'declaration':([19,24,33,40,],[30,30,46,46,]),'declaration_list':([19,24,],[33,40,]),'expression':([8,15,20,21,22,25,26,35,36,37,39,42,43,],[14,28,34,34,34,34,34,48,48,48,52,48,48,]),'parameter_list':([20,21,22,25,26,],[35,36,37,42,43,]),'type':([31,],[45,]),'statement_list':([0,],[5,]),'import_statement':([0,5,],[6,10,]),'expression_list':([8,],[15,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',12),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',15),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',44),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',45),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',52),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',53),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',60),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',61),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',70),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',71),
  ('type -> ID','type',1,'p_type','parser.py',79),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',83),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',87),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',96),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',100),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',104),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',108),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',116),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',120),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',124),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',125),
]
