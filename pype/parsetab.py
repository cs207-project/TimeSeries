
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E1FCB2EDDF1216D4CA039394CC93A7CE'
    
_lr_action_items = {'OUTPUT':([15,],[20,]),'IMPORT':([6,],[10,]),'RBRACE':([11,12,13,14,16,18,32,37,43,47,49,50,51,52,54,55,57,],[-9,-27,-28,19,-26,-8,-13,-11,-21,-12,-23,-10,-22,-24,-25,-20,-19,]),'INPUT':([15,],[22,]),'OP_ADD':([15,],[23,]),'OP_MUL':([15,],[24,]),'ASSIGN':([15,],[25,]),'LBRACE':([0,3,4,5,8,9,19,28,],[2,-4,-5,2,-3,-2,-7,-6,]),'NUMBER':([7,11,12,13,14,16,18,21,23,24,26,27,32,34,35,37,38,39,40,41,42,43,47,48,49,50,51,52,54,55,57,],[12,-9,-27,-28,12,-26,-8,12,12,12,12,12,-13,-30,12,-11,12,12,12,12,12,-21,-12,-29,-23,-10,-22,-24,-25,-20,-19,]),'OP_SUB':([15,],[21,]),'OP_DIV':([15,],[26,]),'$end':([1,3,4,5,8,9,19,28,],[0,-4,-5,-1,-3,-2,-7,-6,]),'LPAREN':([0,3,4,5,7,8,9,11,12,13,14,16,18,19,20,21,22,23,24,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,50,51,52,54,55,57,58,],[6,-4,-5,6,15,-3,-2,-9,-27,-28,15,-26,-8,-7,30,15,30,15,15,15,15,-6,-15,30,-13,-17,-30,15,30,-11,15,15,15,15,15,-21,-14,-12,-29,-23,-10,-22,-24,-25,-20,-19,-16,]),'STRING':([7,11,12,13,14,16,18,21,23,24,26,27,32,34,35,37,38,39,40,41,42,43,47,48,49,50,51,52,54,55,57,],[13,-9,-27,-28,13,-26,-8,13,13,13,13,13,-13,-30,13,-11,13,13,13,13,13,-21,-12,-29,-23,-10,-22,-24,-25,-20,-19,]),'RPAREN':([12,13,16,17,20,22,27,29,31,32,33,34,35,36,37,38,39,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-27,-28,-26,28,32,37,43,-15,47,-13,-17,-30,49,50,-11,51,52,54,55,-21,-14,-12,-29,-23,-10,-22,-24,57,-25,-20,58,-19,-16,]),'ID':([2,7,10,11,12,13,14,15,16,18,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,57,58,],[7,16,17,-9,-27,-28,16,27,-26,-8,33,16,33,16,16,40,16,16,-15,45,33,-13,-17,-30,16,33,-11,16,16,16,16,16,-21,56,-18,-14,-12,-29,-23,-10,-22,-24,-25,-20,-19,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'expression':([7,14,21,23,24,26,27,35,38,39,40,41,42,],[11,18,34,34,34,34,34,48,48,48,53,48,48,]),'type':([30,],[44,]),'import_statement':([0,5,],[3,8,]),'component':([0,5,],[4,9,]),'parameter_list':([21,23,24,26,27,],[35,38,39,41,42,]),'expression_list':([7,],[14,]),'statement_list':([0,],[5,]),'declaration_list':([20,22,],[31,36,]),'declaration':([20,22,31,36,],[29,29,46,46,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',12),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',15),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',44),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',45),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',52),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',53),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',60),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',61),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',70),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',71),
  ('type -> ID','type',1,'p_type','parser.py',79),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',83),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',87),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',96),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',100),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',104),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',108),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',116),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',120),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',124),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',125),
]
