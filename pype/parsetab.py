
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D7D1BCF469A7160DABB9E0C3456A50E8'
    
_lr_action_items = {'LPAREN':([0,1,4,6,7,8,10,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,53,54,55,57,58,],[2,2,-5,-4,-2,-3,12,-28,12,-26,-9,-27,-6,12,31,12,12,12,12,31,-7,-8,12,-30,-13,-15,31,-17,12,12,-21,12,12,12,-11,31,-22,-29,-12,-14,-25,-20,-23,-24,-10,-19,-16,]),'OP_ADD':([12,],[19,]),'LBRACE':([0,1,4,6,7,8,18,27,],[3,3,-5,-4,-2,-3,-6,-7,]),'OUTPUT':([12,],[20,]),'ASSIGN':([12,],[23,]),'OP_DIV':([12,],[21,]),'RBRACE':([13,14,15,16,17,28,32,38,42,44,48,50,51,53,54,55,57,],[-28,27,-26,-9,-27,-8,-13,-21,-11,-22,-12,-25,-20,-23,-24,-10,-19,]),'IMPORT':([2,],[9,]),'ID':([3,9,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,57,58,],[10,11,15,22,-28,15,-26,-9,-27,15,35,15,15,39,15,15,35,-8,15,-30,46,-13,-15,35,-17,15,15,-21,15,15,15,-11,35,-22,-29,-18,56,-12,-14,-25,-20,-23,-24,-10,-19,-16,]),'RPAREN':([11,13,15,17,20,22,26,29,30,32,33,34,35,36,37,38,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,],[18,-28,-26,-27,32,38,42,44,-30,-13,-15,48,-17,50,51,-21,53,54,-11,55,-22,-29,-12,-14,-25,-20,57,-23,-24,-10,58,-19,-16,]),'$end':([1,4,5,6,7,8,18,27,],[-1,-5,0,-4,-2,-3,-6,-7,]),'STRING':([10,13,14,15,16,17,19,21,22,24,25,28,29,30,32,36,37,38,39,40,41,42,44,45,48,50,51,53,54,55,57,],[13,-28,13,-26,-9,-27,13,13,13,13,13,-8,13,-30,-13,13,13,-21,13,13,13,-11,-22,-29,-12,-25,-20,-23,-24,-10,-19,]),'OP_SUB':([12,],[24,]),'OP_MUL':([12,],[25,]),'INPUT':([12,],[26,]),'NUMBER':([10,13,14,15,16,17,19,21,22,24,25,28,29,30,32,36,37,38,39,40,41,42,44,45,48,50,51,53,54,55,57,],[17,-28,17,-26,-9,-27,17,17,17,17,17,-8,17,-30,-13,17,17,-21,17,17,17,-11,-22,-29,-12,-25,-20,-23,-24,-10,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_list':([0,],[1,]),'type':([31,],[47,]),'component':([0,1,],[4,7,]),'program':([0,],[5,]),'expression_list':([10,],[14,]),'import_statement':([0,1,],[6,8,]),'expression':([10,14,19,21,22,24,25,29,36,37,39,40,41,],[16,28,30,30,30,30,30,45,45,45,52,45,45,]),'parameter_list':([19,21,22,24,25,],[29,36,37,40,41,]),'declaration':([20,26,34,43,],[33,33,49,49,]),'declaration_list':([20,26,],[34,43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',12),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',15),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',44),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',45),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',52),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',53),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',60),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',61),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',70),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',71),
  ('type -> ID','type',1,'p_type','parser.py',79),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',83),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',87),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',96),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',100),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',104),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',108),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',116),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',120),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',124),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',125),
]
