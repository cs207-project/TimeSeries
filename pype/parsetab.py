
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '55C53B9434ED5FC68BBE31AE8D09ED67'
    
_lr_action_items = {'OP_DIV':([12,],[18,]),'INPUT':([12,],[20,]),'$end':([1,2,5,6,9,10,27,28,],[0,-4,-1,-5,-3,-2,-7,-6,]),'RPAREN':([14,15,16,17,20,23,25,29,30,31,32,33,34,36,37,38,39,40,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,],[-28,-26,-27,28,34,39,43,-30,45,46,-15,48,-11,-17,51,52,-21,53,55,-13,-29,-25,-23,-14,-10,-22,-24,-20,57,-12,58,-19,-16,]),'IMPORT':([4,],[8,]),'LBRACE':([0,2,5,6,9,10,27,28,],[3,-4,3,-5,-3,-2,-7,-6,]),'LPAREN':([0,2,5,6,7,9,10,11,13,14,15,16,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,55,57,58,],[4,-4,4,-5,12,-3,-2,-9,12,-28,-26,-27,12,12,35,12,12,12,35,-8,-7,-6,-30,12,12,-15,35,-11,-17,12,12,-21,12,12,35,-13,-29,-25,-23,-14,-10,-22,-24,-20,-12,-19,-16,]),'OP_MUL':([12,],[22,]),'OP_SUB':([12,],[19,]),'RBRACE':([11,13,14,15,16,26,34,39,43,45,46,48,51,52,53,55,57,],[-9,27,-28,-26,-27,-8,-11,-21,-13,-25,-23,-10,-22,-24,-20,-12,-19,]),'OP_ADD':([12,],[21,]),'STRING':([7,11,13,14,15,16,18,19,21,22,23,26,29,30,31,34,37,38,39,40,41,43,44,45,46,48,51,52,53,55,57,],[14,-9,14,-28,-26,-27,14,14,14,14,14,-8,-30,14,14,-11,14,14,-21,14,14,-13,-29,-25,-23,-10,-22,-24,-20,-12,-19,]),'NUMBER':([7,11,13,14,15,16,18,19,21,22,23,26,29,30,31,34,37,38,39,40,41,43,44,45,46,48,51,52,53,55,57,],[16,-9,16,-28,-26,-27,16,16,16,16,16,-8,-30,16,16,-11,16,16,-21,16,16,-13,-29,-25,-23,-10,-22,-24,-20,-12,-19,]),'ID':([3,7,8,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,],[7,15,17,-9,23,15,-28,-26,-27,15,15,36,15,15,15,41,36,-8,-30,15,15,-15,36,-11,49,-17,15,15,-21,15,15,36,-13,-29,-25,-23,-14,-10,-18,56,-22,-24,-20,-12,-19,-16,]),'ASSIGN':([12,],[24,]),'OUTPUT':([12,],[25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parameter_list':([18,19,21,22,23,],[30,31,37,38,40,]),'program':([0,],[1,]),'declaration':([20,25,33,42,],[32,32,47,47,]),'import_statement':([0,5,],[2,9,]),'expression':([7,13,18,19,21,22,23,30,31,37,38,40,41,],[11,26,29,29,29,29,29,44,44,44,44,44,54,]),'declaration_list':([20,25,],[33,42,]),'type':([35,],[50,]),'statement_list':([0,],[5,]),'component':([0,5,],[6,10,]),'expression_list':([7,],[13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',27),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',35),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',36),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',45),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',46),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',53),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',54),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',61),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',62),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',71),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',72),
  ('type -> ID','type',1,'p_type','parser.py',80),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',84),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',89),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_expression_add','parser.py',97),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_expression_sub','parser.py',101),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_expression_mul','parser.py',105),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_expression_div','parser.py',109),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',113),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',117),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',121),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',125),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',126),
]
