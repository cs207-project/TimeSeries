
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '55C53B9434ED5FC68BBE31AE8D09ED67'
    
_lr_action_items = {'NUMBER':([9,11,12,13,15,16,18,20,24,25,26,27,29,30,31,32,37,38,40,41,42,43,44,45,46,51,52,53,54,55,57,],[16,16,-9,-28,-26,-27,-8,16,16,16,16,16,-21,-30,16,-11,16,-13,16,16,16,16,-20,-29,-10,-12,-24,-23,-25,-22,-19,]),'OP_SUB':([14,],[25,]),'IMPORT':([6,],[10,]),'RPAREN':([13,15,16,17,20,21,23,29,30,31,32,33,34,35,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,56,57,58,],[-28,-26,-27,28,29,32,38,-21,-30,44,-11,-15,46,-17,-13,51,52,53,54,55,-20,-29,-10,-14,57,-12,-24,-23,-25,-22,58,-19,-16,]),'ASSIGN':([14,],[22,]),'INPUT':([14,],[21,]),'LBRACE':([0,1,3,4,7,8,19,28,],[5,-4,-5,5,-3,-2,-7,-6,]),'LPAREN':([0,1,3,4,7,8,9,11,12,13,15,16,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,51,52,53,54,55,57,58,],[6,-4,-5,6,-3,-2,14,14,-9,-28,-26,-27,-8,-7,14,36,36,14,14,14,14,-6,-21,-30,14,-11,-15,36,-17,14,-13,36,14,14,14,14,-20,-29,-10,-14,-12,-24,-23,-25,-22,-19,-16,]),'OP_MUL':([14,],[24,]),'ID':([5,9,10,11,12,13,14,15,16,18,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,57,58,],[9,15,17,15,-9,-28,20,-26,-27,-8,15,35,37,35,15,15,15,15,-21,-30,15,-11,-15,35,-17,49,15,-13,35,15,15,15,15,-20,-29,-10,-14,56,-18,-12,-24,-23,-25,-22,-19,-16,]),'OP_ADD':([14,],[27,]),'OUTPUT':([14,],[23,]),'OP_DIV':([14,],[26,]),'$end':([1,2,3,4,7,8,19,28,],[-4,0,-5,-1,-3,-2,-7,-6,]),'STRING':([9,11,12,13,15,16,18,20,24,25,26,27,29,30,31,32,37,38,40,41,42,43,44,45,46,51,52,53,54,55,57,],[13,13,-9,-28,-26,-27,-8,13,13,13,13,13,-21,-30,13,-11,13,-13,13,13,13,13,-20,-29,-10,-12,-24,-23,-25,-22,-19,]),'RBRACE':([11,12,13,15,16,18,29,32,38,44,46,51,52,53,54,55,57,],[19,-9,-28,-26,-27,-8,-21,-11,-13,-20,-10,-12,-24,-23,-25,-22,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_list':([9,],[11,]),'import_statement':([0,4,],[1,7,]),'program':([0,],[2,]),'type':([36,],[48,]),'expression':([9,11,20,24,25,26,27,31,37,40,41,42,43,],[12,18,30,30,30,30,30,45,50,45,45,45,45,]),'parameter_list':([20,24,25,26,27,],[31,40,41,42,43,]),'declaration_list':([21,23,],[34,39,]),'component':([0,4,],[3,8,]),'declaration':([21,23,34,39,],[33,33,47,47,]),'statement_list':([0,],[4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',12),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',15),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',44),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',45),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',52),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',53),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',60),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',61),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',70),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',71),
  ('type -> ID','type',1,'p_type','parser.py',79),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',83),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',87),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',96),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',100),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',104),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',108),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',116),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',120),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',124),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',125),
]
