
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BA90F0C8CB04659A4089667E76C36B34'
    
_lr_action_items = {'ASSIGN':([12,],[20,]),'RPAREN':([13,14,16,17,24,26,27,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,55,56,57,58,],[-27,-26,-28,28,35,41,43,45,-30,47,48,49,-21,50,52,-17,-15,-13,55,-11,56,-23,-29,-22,-24,-20,-25,-14,-12,-10,-19,58,-16,]),'INPUT':([12,],[27,]),'IMPORT':([6,],[10,]),'$end':([1,2,3,4,7,8,18,28,],[-1,-5,-4,0,-2,-3,-7,-6,]),'OP_ADD':([12,],[22,]),'LBRACE':([0,1,2,3,7,8,18,28,],[5,5,-5,-4,-2,-3,-7,-6,]),'OP_MUL':([12,],[23,]),'LPAREN':([0,1,2,3,7,8,9,11,13,14,15,16,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,45,46,47,48,49,50,51,52,55,56,58,],[6,6,-5,-4,-2,-3,12,12,-27,-26,-9,-28,-7,-8,12,12,12,12,12,40,40,-6,12,12,-30,12,12,12,-21,12,40,-17,-15,-13,40,-11,-23,-29,-22,-24,-20,-25,-14,-12,-10,-19,-16,]),'RBRACE':([11,13,14,15,16,19,35,41,43,45,47,48,49,50,52,55,56,],[18,-27,-26,-9,-28,-8,-21,-13,-11,-23,-22,-24,-20,-25,-12,-10,-19,]),'NUMBER':([9,11,13,14,15,16,19,21,22,23,24,25,29,30,31,32,33,34,35,36,41,43,45,46,47,48,49,50,52,55,56,],[13,13,-27,-26,-9,-28,-8,13,13,13,13,13,13,13,-30,13,13,13,-21,13,-13,-11,-23,-29,-22,-24,-20,-25,-12,-10,-19,]),'ID':([5,9,10,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,58,],[9,14,17,14,24,-27,-26,-9,-28,-8,29,14,14,14,14,14,38,38,14,14,-30,14,14,14,-21,14,38,-17,-15,54,-13,38,-11,-23,-29,-22,-24,-20,-25,-14,-12,57,-18,-10,-19,-16,]),'OP_SUB':([12,],[21,]),'STRING':([9,11,13,14,15,16,19,21,22,23,24,25,29,30,31,32,33,34,35,36,41,43,45,46,47,48,49,50,52,55,56,],[16,16,-27,-26,-9,-28,-8,16,16,16,16,16,16,16,-30,16,16,16,-21,16,-13,-11,-23,-29,-22,-24,-20,-25,-12,-10,-19,]),'OUTPUT':([12,],[26,]),'OP_DIV':([12,],[25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration_list':([26,27,],[37,42,]),'expression_list':([9,],[11,]),'declaration':([26,27,37,42,],[39,39,51,51,]),'expression':([9,11,21,22,23,24,25,29,30,32,33,34,36,],[15,19,31,31,31,31,31,44,46,46,46,46,46,]),'component':([0,1,],[2,7,]),'import_statement':([0,1,],[3,8,]),'program':([0,],[4,]),'parameter_list':([21,22,23,24,25,],[30,32,33,34,36,]),'statement_list':([0,],[1,]),'type':([40,],[53,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',12),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',15),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',44),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',45),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',52),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',53),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',60),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',61),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',70),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',71),
  ('type -> ID','type',1,'p_type','parser.py',79),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',83),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',87),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',96),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',100),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',104),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',108),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',116),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',120),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',124),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',125),
]
