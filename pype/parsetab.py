
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BA90F0C8CB04659A4089667E76C36B34'
    
_lr_action_items = {'ID':([1,7,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,],[7,11,17,-26,-27,18,11,-28,-9,11,11,11,11,35,11,41,35,-8,-21,11,-30,11,11,11,-17,35,-13,-15,51,11,11,35,-11,-20,-29,-24,-23,-25,-12,-14,-18,56,-22,-10,-19,-16,]),'LBRACE':([0,2,3,4,8,9,26,28,],[1,-4,1,-5,-3,-2,-7,-6,]),'$end':([2,3,4,5,8,9,26,28,],[-4,-1,-5,0,-3,-2,-7,-6,]),'RBRACE':([11,12,14,15,16,27,29,37,43,44,46,47,48,49,53,55,57,],[-26,-27,26,-28,-9,-8,-21,-13,-11,-20,-24,-23,-25,-12,-22,-10,-19,]),'OP_MUL':([13,],[19,]),'NUMBER':([7,11,12,14,15,16,18,19,20,21,23,27,29,30,31,32,33,34,37,40,41,43,44,45,46,47,48,49,53,55,57,],[12,-26,-27,12,-28,-9,12,12,12,12,12,-8,-21,12,-30,12,12,12,-13,12,12,-11,-20,-29,-24,-23,-25,-12,-22,-10,-19,]),'RPAREN':([11,12,15,17,18,22,25,29,30,31,32,33,34,35,36,37,38,40,42,43,44,45,46,47,48,49,50,53,54,55,56,57,58,],[-26,-27,-28,28,29,37,43,-21,44,-30,46,47,48,-17,49,-13,-15,53,55,-11,-20,-29,-24,-23,-25,-12,-14,-22,57,-10,58,-19,-16,]),'OP_SUB':([13,],[20,]),'OP_DIV':([13,],[21,]),'LPAREN':([0,2,3,4,7,8,9,11,12,14,15,16,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,53,55,57,58,],[6,-4,6,-5,13,-3,-2,-26,-27,13,-28,-9,13,13,13,13,39,13,39,-7,-8,-6,-21,13,-30,13,13,13,-17,39,-13,-15,13,13,39,-11,-20,-29,-24,-23,-25,-12,-14,-22,-10,-19,-16,]),'OUTPUT':([13,],[22,]),'IMPORT':([6,],[10,]),'OP_ADD':([13,],[23,]),'STRING':([7,11,12,14,15,16,18,19,20,21,23,27,29,30,31,32,33,34,37,40,41,43,44,45,46,47,48,49,53,55,57,],[15,-26,-27,15,-28,-9,15,15,15,15,15,-8,-21,15,-30,15,15,15,-13,15,15,-11,-20,-29,-24,-23,-25,-12,-22,-10,-19,]),'ASSIGN':([13,],[24,]),'INPUT':([13,],[25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parameter_list':([18,19,20,21,23,],[30,32,33,34,40,]),'declaration_list':([22,25,],[36,42,]),'import_statement':([0,3,],[2,8,]),'statement_list':([0,],[3,]),'expression_list':([7,],[14,]),'component':([0,3,],[4,9,]),'declaration':([22,25,36,42,],[38,38,50,50,]),'type':([39,],[52,]),'program':([0,],[5,]),'expression':([7,14,18,19,20,21,23,30,32,33,34,40,41,],[16,27,31,31,31,31,31,45,45,45,45,45,54,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',12),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',15),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',44),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',45),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',52),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',53),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',60),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',61),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',70),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',71),
  ('type -> ID','type',1,'p_type','parser.py',79),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',83),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',87),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',96),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',100),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',104),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',108),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',116),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',120),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',124),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',125),
]
