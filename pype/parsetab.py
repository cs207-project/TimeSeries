
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E1FCB2EDDF1216D4CA039394CC93A7CE'
    
_lr_action_items = {'LPAREN':([0,2,4,6,8,9,10,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,45,46,49,50,51,52,53,54,55,56,58,],[1,-5,1,-4,12,-2,-3,-27,-26,12,-28,-9,-6,12,32,12,12,12,32,12,-7,-8,12,12,-30,32,-11,-15,-17,12,-21,12,12,-13,32,12,-23,-29,-10,-14,-22,-20,-25,-12,-24,-19,-16,]),'ASSIGN':([12,],[19,]),'OP_SUB':([12,],[20,]),'INPUT':([12,],[21,]),'OP_ADD':([12,],[22,]),'RBRACE':([13,14,15,16,17,28,34,38,41,45,49,51,52,53,54,55,56,],[-27,-26,27,-28,-9,-8,-11,-21,-13,-23,-10,-22,-20,-25,-12,-24,-19,]),'NUMBER':([8,13,14,15,16,17,20,22,23,24,26,28,29,30,31,34,37,38,39,40,41,43,45,46,49,51,52,53,54,55,56,],[13,-27,-26,13,-28,-9,13,13,13,13,13,-8,13,13,-30,-11,13,-21,13,13,-13,13,-23,-29,-10,-22,-20,-25,-12,-24,-19,]),'ID':([3,7,8,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,58,],[8,11,14,23,-27,-26,14,-28,-9,29,14,36,14,14,14,36,14,-8,14,14,-30,47,36,-11,-15,-17,14,-21,14,14,-13,36,14,-23,-29,-18,57,-10,-14,-22,-20,-25,-12,-24,-19,-16,]),'IMPORT':([1,],[7,]),'STRING':([8,13,14,15,16,17,20,22,23,24,26,28,29,30,31,34,37,38,39,40,41,43,45,46,49,51,52,53,54,55,56,],[16,-27,-26,16,-28,-9,16,16,16,16,16,-8,16,16,-30,-11,16,-21,16,16,-13,16,-23,-29,-10,-22,-20,-25,-12,-24,-19,]),'$end':([2,4,5,6,9,10,18,27,],[-5,-1,0,-4,-2,-3,-6,-7,]),'LBRACE':([0,2,4,6,9,10,18,27,],[3,-5,3,-4,-2,-3,-6,-7,]),'RPAREN':([11,13,14,16,21,23,25,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,54,55,56,57,58,],[18,-27,-26,-28,34,38,41,45,-30,49,-11,-15,-17,51,-21,52,53,-13,54,55,56,-23,-29,-10,-14,-22,-20,-25,-12,-24,-19,58,-16,]),'OP_DIV':([12,],[24,]),'OP_MUL':([12,],[26,]),'OUTPUT':([12,],[25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_list':([8,],[15,]),'component':([0,4,],[2,9,]),'declaration_list':([21,25,],[33,42,]),'type':([32,],[48,]),'statement_list':([0,],[4,]),'declaration':([21,25,33,42,],[35,35,50,50,]),'program':([0,],[5,]),'import_statement':([0,4,],[6,10,]),'parameter_list':([20,22,23,24,26,],[30,37,39,40,43,]),'expression':([8,15,20,22,23,24,26,29,30,37,39,40,43,],[17,28,31,31,31,31,31,44,46,46,46,46,46,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',12),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',15),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',44),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',45),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',52),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',53),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',60),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',61),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',70),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',71),
  ('type -> ID','type',1,'p_type','parser.py',79),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',83),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',87),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',96),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',100),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',104),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',108),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',116),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',120),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',124),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',125),
]
