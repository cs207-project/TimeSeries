
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E1FCB2EDDF1216D4CA039394CC93A7CE'
    
_lr_action_items = {'IMPORT':([5,],[10,]),'ASSIGN':([16,],[20,]),'OUTPUT':([16,],[21,]),'ID':([4,9,10,11,12,13,14,15,16,18,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,58,],[9,13,17,-9,13,-26,-28,-27,22,-8,29,33,13,13,13,13,33,13,13,-15,46,33,-17,-13,-30,-21,13,13,13,13,33,-11,13,57,-18,-14,-12,-29,-20,-24,-25,-22,-10,-23,-19,-16,]),'LBRACE':([0,1,2,3,7,8,19,28,],[4,-4,-5,4,-3,-2,-7,-6,]),'RPAREN':([13,14,15,17,21,22,26,30,32,33,34,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,56,57,58,],[-26,-28,-27,28,34,36,42,-15,48,-17,-13,-30,-21,50,51,52,53,54,-11,55,56,-14,-12,-29,-20,-24,-25,-22,-10,-23,-19,58,-16,]),'STRING':([9,11,12,13,14,15,18,22,23,24,25,27,29,34,35,36,37,38,39,40,42,43,48,49,50,51,52,53,54,55,56,],[14,-9,14,-26,-28,-27,-8,14,14,14,14,14,14,-13,-30,-21,14,14,14,14,-11,14,-12,-29,-20,-24,-25,-22,-10,-23,-19,]),'OP_DIV':([16,],[24,]),'OP_ADD':([16,],[25,]),'INPUT':([16,],[26,]),'OP_MUL':([16,],[23,]),'$end':([1,2,3,6,7,8,19,28,],[-4,-5,-1,0,-3,-2,-7,-6,]),'RBRACE':([11,12,13,14,15,18,34,36,42,48,50,51,52,53,54,55,56,],[-9,19,-26,-28,-27,-8,-13,-21,-11,-12,-20,-24,-25,-22,-10,-23,-19,]),'LPAREN':([0,1,2,3,7,8,9,11,12,13,14,15,18,19,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,47,48,49,50,51,52,53,54,55,56,58,],[5,-4,-5,5,-3,-2,16,-9,16,-26,-28,-27,-8,-7,31,16,16,16,16,31,16,-6,16,-15,31,-17,-13,-30,-21,16,16,16,16,31,-11,16,-14,-12,-29,-20,-24,-25,-22,-10,-23,-19,-16,]),'OP_SUB':([16,],[27,]),'NUMBER':([9,11,12,13,14,15,18,22,23,24,25,27,29,34,35,36,37,38,39,40,42,43,48,49,50,51,52,53,54,55,56,],[15,-9,15,-26,-28,-27,-8,15,15,15,15,15,15,-13,-30,-21,15,15,15,15,-11,15,-12,-29,-20,-24,-25,-22,-10,-23,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration':([21,26,32,41,],[30,30,47,47,]),'import_statement':([0,3,],[1,7,]),'expression':([9,12,22,23,24,25,27,29,37,38,39,40,43,],[11,18,35,35,35,35,35,44,49,49,49,49,49,]),'declaration_list':([21,26,],[32,41,]),'expression_list':([9,],[12,]),'statement_list':([0,],[3,]),'parameter_list':([22,23,24,25,27,],[37,38,39,40,43,]),'type':([31,],[45,]),'component':([0,3,],[2,8,]),'program':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',12),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',15),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',44),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',45),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',52),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',53),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',60),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',61),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',70),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',71),
  ('type -> ID','type',1,'p_type','parser.py',79),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',83),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',87),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',96),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',100),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',104),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',108),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',116),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',120),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',124),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',125),
]
