
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'B7DA2FE6C22431AB95D14A63E4FE0078'
    
_lr_action_items = {'RPAREN':([11,14,16,17,23,24,26,29,30,31,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,56,57,58,],[18,-28,-27,-26,34,39,42,-30,44,46,48,-11,-15,49,-17,-21,53,54,-13,55,-22,-29,-23,56,-25,-10,-14,-20,-24,-12,-19,58,-16,]),'$end':([2,3,5,6,9,10,18,27,],[0,-5,-4,-1,-2,-3,-6,-7,]),'OP_SUB':([12,],[20,]),'LPAREN':([0,3,5,6,8,9,10,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,48,49,50,53,54,55,56,58,],[1,-5,-4,1,12,-2,-3,-9,-28,12,-27,-26,-6,12,12,12,37,12,12,37,-7,-8,-30,12,12,12,12,-11,-15,37,-17,-21,12,12,-13,37,-22,-29,-23,-25,-10,-14,-20,-24,-12,-19,-16,]),'OP_ADD':([12,],[19,]),'IMPORT':([1,],[7,]),'STRING':([8,13,14,15,16,17,19,20,22,24,25,28,29,30,31,32,33,34,39,40,41,42,44,45,46,48,49,53,54,55,56,],[14,-9,-28,14,-27,-26,14,14,14,14,14,-8,-30,14,14,14,14,-11,-21,14,14,-13,-22,-29,-23,-25,-10,-20,-24,-12,-19,]),'RBRACE':([13,14,15,16,17,28,34,39,42,44,46,48,49,53,54,55,56,],[-9,-28,27,-27,-26,-8,-11,-21,-13,-22,-23,-25,-10,-20,-24,-12,-19,]),'NUMBER':([8,13,14,15,16,17,19,20,22,24,25,28,29,30,31,32,33,34,39,40,41,42,44,45,46,48,49,53,54,55,56,],[16,-9,-28,16,-27,-26,16,16,16,16,16,-8,-30,16,16,16,16,-11,-21,16,16,-13,-22,-29,-23,-25,-10,-20,-24,-12,-19,]),'ASSIGN':([12,],[21,]),'INPUT':([12,],[23,]),'OP_DIV':([12,],[22,]),'ID':([4,7,8,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,58,],[8,11,17,24,-9,-28,17,-27,-26,17,17,32,17,38,17,17,38,-8,-30,17,17,17,17,-11,-15,38,52,-17,-21,17,17,-13,38,-22,-29,-23,-25,-10,-14,57,-18,-20,-24,-12,-19,-16,]),'OP_MUL':([12,],[25,]),'OUTPUT':([12,],[26,]),'LBRACE':([0,3,5,6,9,10,18,27,],[4,-5,-4,4,-2,-3,-6,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_list':([8,],[15,]),'type':([37,],[51,]),'declaration':([23,26,36,43,],[35,35,50,50,]),'parameter_list':([19,20,22,24,25,],[30,31,33,40,41,]),'declaration_list':([23,26,],[36,43,]),'program':([0,],[2,]),'component':([0,6,],[3,9,]),'import_statement':([0,6,],[5,10,]),'expression':([8,15,19,20,22,24,25,30,31,32,33,40,41,],[13,28,29,29,29,29,29,45,45,47,45,45,45,]),'statement_list':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',12),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',15),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',44),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',45),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',52),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',53),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',60),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',61),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',70),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',71),
  ('type -> ID','type',1,'p_type','parser.py',79),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',83),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',87),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',96),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',100),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',104),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',108),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',116),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',120),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',124),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',125),
]
