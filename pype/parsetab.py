
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '371EF72B57DF7D01BB0A145AD73D5ADC'
    
_lr_action_items = {'LBRACE':([0,1,3,5,8,9,27,28,],[4,-5,-4,4,-2,-3,-7,-6,]),'INPUT':([13,],[18,]),'RPAREN':([12,14,15,17,18,19,23,29,30,31,33,34,35,36,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-26,-27,-28,28,30,34,40,-15,-11,-17,47,-21,-30,48,51,52,-13,53,54,55,-14,-10,-20,-29,57,-22,-25,-12,-23,-24,58,-19,-16,]),'ID':([4,7,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,57,58,],[7,12,17,-9,-26,19,-27,-28,12,31,12,37,12,12,31,12,12,-8,-15,-11,-17,45,31,-21,-30,12,12,12,12,-13,31,12,12,56,-18,-14,-10,-20,-29,-22,-25,-12,-23,-24,-19,-16,]),'ASSIGN':([13,],[20,]),'OP_ADD':([13,],[21,]),'IMPORT':([6,],[10,]),'RBRACE':([11,12,14,15,16,26,30,34,40,47,48,51,52,53,54,55,57,],[-9,-26,-27,-28,27,-8,-11,-21,-13,-10,-20,-22,-25,-12,-23,-24,-19,]),'LPAREN':([0,1,3,5,7,8,9,11,12,14,15,16,18,19,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,51,52,53,54,55,57,58,],[6,-5,-4,6,13,-2,-3,-9,-26,-27,-28,13,32,13,13,13,32,13,13,-8,-7,-6,-15,-11,-17,32,-21,-30,13,13,13,13,-13,32,13,13,-14,-10,-20,-29,-22,-25,-12,-23,-24,-19,-16,]),'NUMBER':([7,11,12,14,15,16,19,21,22,24,25,26,30,34,35,36,37,38,39,40,42,43,47,48,49,51,52,53,54,55,57,],[14,-9,-26,-27,-28,14,14,14,14,14,14,-8,-11,-21,-30,14,14,14,14,-13,14,14,-10,-20,-29,-22,-25,-12,-23,-24,-19,]),'OUTPUT':([13,],[23,]),'OP_DIV':([13,],[22,]),'OP_MUL':([13,],[25,]),'OP_SUB':([13,],[24,]),'STRING':([7,11,12,14,15,16,19,21,22,24,25,26,30,34,35,36,37,38,39,40,42,43,47,48,49,51,52,53,54,55,57,],[15,-9,-26,-27,-28,15,15,15,15,15,15,-8,-11,-21,-30,15,15,15,15,-13,15,15,-10,-20,-29,-22,-25,-12,-23,-24,-19,]),'$end':([1,2,3,5,8,9,27,28,],[-5,0,-4,-1,-2,-3,-7,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'component':([0,5,],[1,8,]),'program':([0,],[2,]),'import_statement':([0,5,],[3,9,]),'declaration':([18,23,33,41,],[29,29,46,46,]),'expression':([7,16,19,21,22,24,25,36,37,38,39,42,43,],[11,26,35,35,35,35,35,49,50,49,49,49,49,]),'expression_list':([7,],[16,]),'parameter_list':([19,21,22,24,25,],[36,38,39,42,43,]),'statement_list':([0,],[5,]),'type':([32,],[44,]),'declaration_list':([18,23,],[33,41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',12),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',15),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',44),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',45),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',52),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',53),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',60),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',61),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',70),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',71),
  ('type -> ID','type',1,'p_type','parser.py',79),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',83),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',87),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',96),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',100),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',104),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',108),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',116),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',120),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',124),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',125),
]
