
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '55C53B9434ED5FC68BBE31AE8D09ED67'
    
_lr_action_items = {'IMPORT':([2,],[7,]),'LPAREN':([0,1,4,6,8,9,10,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,49,50,51,52,53,54,55,57,58,],[2,-4,-5,2,12,-3,-2,-9,-27,12,-26,-28,-6,30,12,12,12,30,12,12,-8,-7,-17,-13,30,-15,12,-30,12,-21,12,12,-11,30,12,12,-12,-14,-29,-23,-20,-25,-10,-24,-22,-19,-16,]),'OUTPUT':([12,],[19,]),'ASSIGN':([12,],[20,]),'$end':([1,3,4,6,9,10,18,28,],[-4,0,-5,-1,-3,-2,-6,-7,]),'NUMBER':([8,13,14,15,16,17,21,22,23,25,26,27,31,34,35,36,37,38,39,40,42,43,46,49,50,51,52,53,54,55,57,],[14,-9,-27,14,-26,-28,14,14,14,14,14,-8,-13,14,-30,14,-21,14,14,-11,14,14,-12,-29,-23,-20,-25,-10,-24,-22,-19,]),'RPAREN':([11,14,16,17,19,22,24,29,31,32,33,35,36,37,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,],[18,-27,-26,-28,31,37,40,-17,-13,46,-15,-30,50,-21,51,52,-11,53,54,55,-12,-14,57,-29,-23,-20,-25,-10,-24,-22,58,-19,-16,]),'LBRACE':([0,1,4,6,9,10,18,28,],[5,-4,-5,5,-3,-2,-6,-7,]),'RBRACE':([13,14,15,16,17,27,31,37,40,46,50,51,52,53,54,55,57,],[-9,-27,28,-26,-28,-8,-13,-21,-11,-12,-23,-20,-25,-10,-24,-22,-19,]),'OP_SUB':([12,],[21,]),'ID':([5,7,8,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,57,58,],[8,11,16,22,-9,-27,16,-26,-28,29,34,16,16,16,29,16,16,-8,-17,44,-13,29,-15,16,-30,16,-21,16,16,-11,29,16,16,-18,56,-12,-14,-29,-23,-20,-25,-10,-24,-22,-19,-16,]),'STRING':([8,13,14,15,16,17,21,22,23,25,26,27,31,34,35,36,37,38,39,40,42,43,46,49,50,51,52,53,54,55,57,],[17,-9,-27,17,-26,-28,17,17,17,17,17,-8,-13,17,-30,17,-21,17,17,-11,17,17,-12,-29,-23,-20,-25,-10,-24,-22,-19,]),'INPUT':([12,],[24,]),'OP_MUL':([12,],[25,]),'OP_ADD':([12,],[26,]),'OP_DIV':([12,],[23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_list':([8,],[15,]),'import_statement':([0,6,],[1,9,]),'program':([0,],[3,]),'parameter_list':([21,22,23,25,26,],[36,38,39,42,43,]),'expression':([8,15,21,22,23,25,26,34,36,38,39,42,43,],[13,27,35,35,35,35,35,48,49,49,49,49,49,]),'component':([0,6,],[4,10,]),'type':([30,],[45,]),'declaration':([19,24,32,41,],[33,33,47,47,]),'declaration_list':([19,24,],[32,41,]),'statement_list':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',12),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',15),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',44),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',45),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',52),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',53),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',60),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',61),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',70),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',71),
  ('type -> ID','type',1,'p_type','parser.py',79),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',83),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',87),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',96),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',100),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',104),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',108),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',116),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',120),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',124),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',125),
]
