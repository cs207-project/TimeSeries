
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E1FCB2EDDF1216D4CA039394CC93A7CE'
    
_lr_action_items = {'LPAREN':([0,2,3,4,8,9,10,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,51,52,53,54,55,56,58,],[1,-4,-5,1,-3,-2,12,-26,-27,12,-9,-28,-6,12,12,12,35,12,35,12,-7,-8,12,-30,12,-21,12,12,-15,-11,-17,35,12,-13,35,12,-22,-29,-20,-23,-14,-10,-24,-12,-25,-19,-16,]),'ID':([5,7,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,58,],[10,11,13,20,-26,-27,13,-9,-28,13,13,13,34,38,13,38,13,-8,13,-30,13,-21,13,13,49,-15,-11,-17,38,13,-13,38,13,-22,-29,-20,-23,-18,57,-14,-10,-24,-12,-25,-19,-16,]),'OP_ADD':([12,],[19,]),'LBRACE':([0,2,3,4,8,9,18,27,],[5,-4,-5,5,-3,-2,-6,-7,]),'$end':([2,3,4,6,8,9,18,27,],[-4,-5,-1,0,-3,-2,-6,-7,]),'OP_SUB':([12,],[21,]),'RBRACE':([13,14,15,16,17,28,32,37,41,44,46,47,52,53,54,55,56,],[-26,-27,27,-9,-28,-8,-21,-11,-13,-22,-20,-23,-10,-24,-12,-25,-19,]),'OP_MUL':([12,],[24,]),'IMPORT':([1,],[7,]),'INPUT':([12,],[23,]),'NUMBER':([10,13,14,15,16,17,19,20,21,24,26,28,29,30,31,32,33,34,37,40,41,43,44,45,46,47,52,53,54,55,56,],[14,-26,-27,14,-9,-28,14,14,14,14,14,-8,14,-30,14,-21,14,14,-11,14,-13,14,-22,-29,-20,-23,-10,-24,-12,-25,-19,]),'ASSIGN':([12,],[22,]),'RPAREN':([11,13,14,17,20,23,25,29,30,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,],[18,-26,-27,-28,32,37,41,44,-30,46,-21,47,-15,-11,-17,52,53,-13,54,55,-22,-29,-20,-23,56,-14,-10,-24,-12,-25,-19,58,-16,]),'OUTPUT':([12,],[25,]),'OP_DIV':([12,],[26,]),'STRING':([10,13,14,15,16,17,19,20,21,24,26,28,29,30,31,32,33,34,37,40,41,43,44,45,46,47,52,53,54,55,56,],[17,-26,-27,17,-9,-28,17,17,17,17,17,-8,17,-30,17,-21,17,17,-11,17,-13,17,-22,-29,-20,-23,-10,-24,-12,-25,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parameter_list':([19,20,21,24,26,],[29,31,33,40,43,]),'import_statement':([0,4,],[2,8,]),'declaration':([23,25,39,42,],[36,36,51,51,]),'component':([0,4,],[3,9,]),'type':([35,],[50,]),'expression':([10,15,19,20,21,24,26,29,31,33,34,40,43,],[16,28,30,30,30,30,30,45,45,45,48,45,45,]),'statement_list':([0,],[4,]),'declaration_list':([23,25,],[39,42,]),'expression_list':([10,],[15,]),'program':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',12),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',15),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',44),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',45),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',52),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',53),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',60),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',61),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',70),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',71),
  ('type -> ID','type',1,'p_type','parser.py',79),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',83),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',87),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',96),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',100),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',104),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',108),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',116),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',120),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',124),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',125),
]
