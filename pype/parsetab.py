
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E1FCB2EDDF1216D4CA039394CC93A7CE'
    
_lr_action_items = {'OP_ADD':([12,],[19,]),'OUTPUT':([12,],[20,]),'INPUT':([12,],[21,]),'ASSIGN':([12,],[22,]),'OP_SUB':([12,],[23,]),'RBRACE':([13,14,15,16,17,28,35,37,42,45,49,50,52,53,54,55,57,],[27,-9,-26,-28,-27,-8,-13,-11,-21,-22,-12,-10,-23,-25,-20,-24,-19,]),'NUMBER':([8,13,14,15,16,17,19,23,24,25,26,28,29,30,35,37,38,39,40,41,42,43,44,45,49,50,52,53,54,55,57,],[17,17,-9,-26,-28,-27,17,17,17,17,17,-8,17,-30,-13,-11,17,17,17,17,-21,17,-29,-22,-12,-10,-23,-25,-20,-24,-19,]),'STRING':([8,13,14,15,16,17,19,23,24,25,26,28,29,30,35,37,38,39,40,41,42,43,44,45,49,50,52,53,54,55,57,],[16,16,-9,-26,-28,-27,16,16,16,16,16,-8,16,-30,-13,-11,16,16,16,16,-21,16,-29,-22,-12,-10,-23,-25,-20,-24,-19,]),'OP_DIV':([12,],[24,]),'IMPORT':([2,],[7,]),'LPAREN':([0,1,3,5,8,9,10,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,52,53,54,55,57,58,],[2,-4,-5,2,12,-3,-2,12,-9,-26,-28,-27,-6,12,31,31,12,12,12,12,-7,-8,12,-30,-17,31,-15,-13,31,-11,12,12,12,12,-21,12,-29,-22,-14,-12,-10,-23,-25,-20,-24,-19,-16,]),'ID':([4,7,8,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,57,58,],[8,11,15,25,15,-9,-26,-28,-27,15,32,32,38,15,15,15,15,-8,15,-30,47,-17,32,-15,-13,32,-11,15,15,15,15,-21,15,-29,-22,56,-18,-14,-12,-10,-23,-25,-20,-24,-19,-16,]),'$end':([1,3,5,6,9,10,18,27,],[-4,-5,-1,0,-3,-2,-6,-7,]),'LBRACE':([0,1,3,5,9,10,18,27,],[4,-4,-5,4,-3,-2,-6,-7,]),'OP_MUL':([12,],[26,]),'RPAREN':([11,15,16,17,20,21,25,29,30,32,33,34,35,36,37,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,],[18,-26,-28,-27,35,37,42,45,-30,-17,49,-15,-13,50,-11,52,53,54,-21,55,-29,-22,-14,-12,-10,57,-23,-25,-20,-24,58,-19,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'import_statement':([0,5,],[1,9,]),'expression_list':([8,],[13,]),'expression':([8,13,19,23,24,25,26,29,38,39,40,41,43,],[14,28,30,30,30,30,30,44,51,44,44,44,44,]),'component':([0,5,],[3,10,]),'declaration_list':([20,21,],[33,36,]),'type':([31,],[46,]),'parameter_list':([19,23,24,25,26,],[29,39,40,41,43,]),'statement_list':([0,],[5,]),'program':([0,],[6,]),'declaration':([20,21,33,36,],[34,34,48,48,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',12),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',15),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',44),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',45),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',52),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',53),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',60),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',61),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',70),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',71),
  ('type -> ID','type',1,'p_type','parser.py',79),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',83),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',87),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',96),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',100),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',104),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',108),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',116),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',120),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',124),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',125),
]
