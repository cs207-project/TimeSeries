
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '55C53B9434ED5FC68BBE31AE8D09ED67'
    
_lr_action_items = {'OP_DIV':([17,],[25,]),'OP_ADD':([17,],[21,]),'IMPORT':([1,],[7,]),'ASSIGN':([17,],[22,]),'INPUT':([17,],[23,]),'RPAREN':([11,14,15,16,23,26,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,54,55,56,57,58,],[18,-26,-27,-28,34,39,43,-30,45,-15,-11,50,-17,51,52,-13,53,54,55,-21,-29,-22,56,-14,-10,-23,-25,-12,-24,-20,-19,58,-16,]),'$end':([2,3,4,6,8,9,18,19,],[-1,-4,-5,0,-2,-3,-6,-7,]),'OP_SUB':([17,],[24,]),'LPAREN':([0,2,3,4,8,9,10,12,13,14,15,16,18,19,20,21,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,51,52,53,54,55,56,58,],[1,1,-4,-5,-2,-3,17,-9,17,-26,-27,-28,-6,-7,-8,17,32,17,17,32,17,17,-30,17,17,-15,-11,32,-17,17,17,-13,32,17,17,-21,-29,-22,-14,-10,-23,-25,-12,-24,-20,-19,-16,]),'NUMBER':([10,12,13,14,15,16,20,21,24,25,27,28,29,30,31,34,37,38,39,41,42,43,44,45,50,51,52,53,54,55,56,],[15,-9,15,-26,-27,-28,-8,15,15,15,15,15,-30,15,15,-11,15,15,-13,15,15,-21,-29,-22,-10,-23,-25,-12,-24,-20,-19,]),'LBRACE':([0,2,3,4,8,9,18,19,],[5,5,-4,-5,-2,-3,-6,-7,]),'RBRACE':([12,13,14,15,16,20,34,39,43,45,50,51,52,53,54,55,56,],[-9,19,-26,-27,-28,-8,-11,-13,-21,-22,-10,-23,-25,-12,-24,-20,-19,]),'STRING':([10,12,13,14,15,16,20,21,24,25,27,28,29,30,31,34,37,38,39,41,42,43,44,45,50,51,52,53,54,55,56,],[16,-9,16,-26,-27,-28,-8,16,16,16,16,16,-30,16,16,-11,16,16,-13,16,16,-21,-29,-22,-10,-23,-25,-12,-24,-20,-19,]),'OP_MUL':([17,],[27,]),'OUTPUT':([17,],[26,]),'ID':([5,7,10,12,13,14,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,58,],[10,11,14,-9,14,-26,-27,-28,28,-8,14,31,36,14,14,36,14,14,-30,14,14,47,-15,-11,36,-17,14,14,-13,36,14,14,-21,-29,-22,-18,57,-14,-10,-23,-25,-12,-24,-20,-19,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([10,13,21,24,25,27,28,30,31,37,38,41,42,],[12,20,29,29,29,29,29,44,46,44,44,44,44,]),'expression_list':([10,],[13,]),'import_statement':([0,2,],[3,9,]),'statement_list':([0,],[2,]),'parameter_list':([21,24,25,27,28,],[30,37,38,41,42,]),'component':([0,2,],[4,8,]),'declaration_list':([23,26,],[35,40,]),'declaration':([23,26,35,40,],[33,33,49,49,]),'type':([32,],[48,]),'program':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',12),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',15),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',44),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',45),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',52),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',53),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',60),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',61),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',70),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',71),
  ('type -> ID','type',1,'p_type','parser.py',79),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',83),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',87),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',96),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',100),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',104),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',108),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',116),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',120),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',124),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',125),
]
