
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E1FCB2EDDF1216D4CA039394CC93A7CE'
    
_lr_action_items = {'ASSIGN':([16,],[27,]),'NUMBER':([7,11,12,13,14,15,18,20,21,22,23,26,29,30,31,32,33,34,39,41,42,43,44,45,46,47,48,50,53,54,57,],[11,-27,-26,-28,-9,11,-8,11,11,11,11,11,-30,11,11,-21,11,11,-13,-11,11,11,-29,-22,-20,-24,-25,-12,-10,-23,-19,]),'OP_ADD':([16,],[20,]),'ID':([1,7,10,11,12,13,14,15,16,18,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,],[7,12,17,-27,-26,-28,-9,12,21,-8,12,12,12,12,36,36,12,43,-30,12,12,-21,12,12,36,-17,-15,51,-13,36,-11,12,12,-29,-22,-20,-24,-25,-14,-12,-18,56,-10,-23,-19,-16,]),'STRING':([7,11,12,13,14,15,18,20,21,22,23,26,29,30,31,32,33,34,39,41,42,43,44,45,46,47,48,50,53,54,57,],[13,-27,-26,-28,-9,13,-8,13,13,13,13,13,-30,13,13,-21,13,13,-13,-11,13,13,-29,-22,-20,-24,-25,-12,-10,-23,-19,]),'LBRACE':([0,3,4,5,8,9,19,28,],[1,-5,1,-4,-2,-3,-7,-6,]),'OP_SUB':([16,],[26,]),'OUTPUT':([16,],[24,]),'INPUT':([16,],[25,]),'OP_MUL':([16,],[22,]),'OP_DIV':([16,],[23,]),'$end':([2,3,4,5,8,9,19,28,],[0,-5,-1,-4,-2,-3,-7,-6,]),'RBRACE':([11,12,13,14,15,18,32,39,41,45,46,47,48,50,53,54,57,],[-27,-26,-28,-9,19,-8,-21,-13,-11,-22,-20,-24,-25,-12,-10,-23,-19,]),'LPAREN':([0,3,4,5,7,8,9,11,12,13,14,15,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,53,54,57,58,],[6,-5,6,-4,16,-2,-3,-27,-26,-28,-9,16,-8,-7,16,16,16,16,38,38,16,-6,-30,16,16,-21,16,16,38,-17,-15,-13,38,-11,16,16,-29,-22,-20,-24,-25,-14,-12,-10,-23,-19,-16,]),'IMPORT':([6,],[10,]),'RPAREN':([11,12,13,17,21,24,25,29,30,31,32,33,34,35,36,37,39,40,41,42,44,45,46,47,48,49,50,53,54,55,56,57,58,],[-27,-26,-28,28,32,39,41,-30,45,46,-21,47,48,50,-17,-15,-13,53,-11,54,-29,-22,-20,-24,-25,-14,-12,-10,-23,57,58,-19,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration_list':([24,25,],[35,40,]),'program':([0,],[2,]),'declaration':([24,25,35,40,],[37,37,49,49,]),'component':([0,4,],[3,8,]),'statement_list':([0,],[4,]),'expression_list':([7,],[15,]),'import_statement':([0,4,],[5,9,]),'parameter_list':([20,21,22,23,26,],[30,31,33,34,42,]),'expression':([7,15,20,21,22,23,26,30,31,33,34,42,43,],[14,18,29,29,29,29,29,44,44,44,44,44,55,]),'type':([38,],[52,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',12),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',15),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',44),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',45),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',52),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',53),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',60),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',61),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',70),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',71),
  ('type -> ID','type',1,'p_type','parser.py',79),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',83),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',87),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',96),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',100),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',104),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',108),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',116),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',120),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',124),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',125),
]
