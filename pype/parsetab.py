
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'B7DA2FE6C22431AB95D14A63E4FE0078'
    
_lr_action_items = {'LBRACE':([0,1,3,4,8,9,18,28,],[5,-5,5,-4,-2,-3,-6,-7,]),'RBRACE':([12,13,14,15,17,27,30,40,42,47,48,51,52,53,54,55,57,],[-9,-27,-26,-28,28,-8,-11,-21,-13,-10,-25,-23,-24,-22,-20,-12,-19,]),'INPUT':([16,],[19,]),'OP_DIV':([16,],[20,]),'LPAREN':([0,1,3,4,8,9,10,12,13,14,15,17,18,19,20,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,51,52,53,54,55,57,58,],[2,-5,2,-4,-2,-3,16,-9,-27,-26,-28,16,-6,31,16,16,16,16,16,31,-8,-7,-15,-11,31,-17,16,-30,16,16,16,16,-21,16,-13,31,-14,-10,-25,-29,-23,-24,-22,-20,-12,-19,-16,]),'OUTPUT':([16,],[26,]),'$end':([1,3,4,6,8,9,18,28,],[-5,-1,-4,0,-2,-3,-6,-7,]),'OP_MUL':([16,],[23,]),'OP_ADD':([16,],[24,]),'ID':([5,7,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,57,58,],[10,11,14,-9,-27,-26,-28,25,14,33,14,36,14,14,14,14,33,-8,-15,-11,45,33,-17,14,-30,14,14,14,14,-21,14,-13,33,56,-18,-14,-10,-25,-29,-23,-24,-22,-20,-12,-19,-16,]),'STRING':([10,12,13,14,15,17,20,22,23,24,25,27,30,34,35,36,37,38,39,40,41,42,47,48,49,51,52,53,54,55,57,],[15,-9,-27,-26,-28,15,15,15,15,15,15,-8,-11,15,-30,15,15,15,15,-21,15,-13,-10,-25,-29,-23,-24,-22,-20,-12,-19,]),'OP_SUB':([16,],[22,]),'NUMBER':([10,12,13,14,15,17,20,22,23,24,25,27,30,34,35,36,37,38,39,40,41,42,47,48,49,51,52,53,54,55,57,],[13,-9,-27,-26,-28,13,13,13,13,13,13,-8,-11,13,-30,13,13,13,13,-21,13,-13,-10,-25,-29,-23,-24,-22,-20,-12,-19,]),'IMPORT':([2,],[7,]),'RPAREN':([11,13,14,15,19,25,26,29,30,32,33,34,35,37,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,],[18,-27,-26,-28,30,40,42,-15,-11,47,-17,48,-30,51,52,53,-21,54,-13,55,-14,-10,-25,-29,57,-23,-24,-22,-20,-12,58,-19,-16,]),'ASSIGN':([16,],[21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'type':([31,],[44,]),'declaration':([19,26,32,43,],[29,29,46,46,]),'component':([0,3,],[1,8,]),'expression':([10,17,20,22,23,24,25,34,36,37,38,39,41,],[12,27,35,35,35,35,35,49,50,49,49,49,49,]),'expression_list':([10,],[17,]),'declaration_list':([19,26,],[32,43,]),'statement_list':([0,],[3,]),'import_statement':([0,3,],[4,9,]),'program':([0,],[6,]),'parameter_list':([20,22,23,24,25,],[34,37,38,39,41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',12),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',15),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',44),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',45),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',52),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',53),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',60),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',61),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',70),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',71),
  ('type -> ID','type',1,'p_type','parser.py',79),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',83),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',87),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',96),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',100),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',104),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',108),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',116),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',120),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',124),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',125),
]
