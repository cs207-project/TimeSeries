
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'B7DA2FE6C22431AB95D14A63E4FE0078'
    
_lr_action_items = {'ASSIGN':([16,],[22,]),'NUMBER':([9,11,12,13,14,15,19,20,21,23,24,27,29,30,31,32,33,34,35,36,41,43,44,45,46,48,49,50,54,55,56,],[14,-28,-26,14,-27,-9,-8,14,14,14,14,14,-30,-21,14,14,14,14,14,-13,-11,14,-29,-20,-22,-24,-25,-12,-10,-23,-19,]),'RBRACE':([11,12,13,14,15,19,30,36,41,45,46,48,49,50,54,55,56,],[-28,-26,18,-27,-9,-8,-21,-13,-11,-20,-22,-24,-25,-12,-10,-23,-19,]),'OP_ADD':([16,],[21,]),'INPUT':([16,],[26,]),'IMPORT':([6,],[10,]),'STRING':([9,11,12,13,14,15,19,20,21,23,24,27,29,30,31,32,33,34,35,36,41,43,44,45,46,48,49,50,54,55,56,],[11,-28,-26,11,-27,-9,-8,11,11,11,11,11,-30,-21,11,11,11,11,11,-13,-11,11,-29,-20,-22,-24,-25,-12,-10,-23,-19,]),'ID':([5,9,10,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,58,],[9,12,17,-28,-26,12,-27,-9,20,-8,12,12,33,12,12,39,39,12,-30,-21,12,12,12,12,12,-13,39,52,-17,-15,-11,39,12,-29,-20,-22,-24,-25,-12,-14,-18,57,-10,-23,-19,-16,]),'OP_MUL':([16,],[23,]),'OP_DIV':([16,],[24,]),'OUTPUT':([16,],[25,]),'$end':([1,2,3,4,7,8,18,28,],[0,-4,-5,-1,-3,-2,-7,-6,]),'LBRACE':([0,2,3,4,7,8,18,28,],[5,-4,-5,5,-3,-2,-7,-6,]),'RPAREN':([11,12,14,17,20,25,26,29,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,],[-28,-26,-27,28,30,36,41,-30,-21,45,46,48,49,-13,50,-17,-15,-11,54,55,-29,-20,-22,56,-24,-25,-12,-14,-10,-23,-19,58,-16,]),'LPAREN':([0,2,3,4,7,8,9,11,12,13,14,15,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,48,49,50,51,54,55,56,58,],[6,-4,-5,6,-3,-2,16,-28,-26,16,-27,-9,-7,-8,16,16,16,16,38,38,16,-6,-30,-21,16,16,16,16,16,-13,38,-17,-15,-11,38,16,-29,-20,-22,-24,-25,-12,-14,-10,-23,-19,-16,]),'OP_SUB':([16,],[27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'import_statement':([0,4,],[2,7,]),'expression':([9,13,20,21,23,24,27,31,32,33,34,35,43,],[15,19,29,29,29,29,29,44,44,47,44,44,44,]),'component':([0,4,],[3,8,]),'statement_list':([0,],[4,]),'declaration_list':([25,26,],[37,42,]),'parameter_list':([20,21,23,24,27,],[31,32,34,35,43,]),'expression_list':([9,],[13,]),'type':([38,],[53,]),'declaration':([25,26,37,42,],[40,40,51,51,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',12),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',15),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',44),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',45),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',52),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',53),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',60),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',61),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',70),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',71),
  ('type -> ID','type',1,'p_type','parser.py',79),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',83),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',87),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',96),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',100),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',104),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',108),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',116),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',120),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',124),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',125),
]
