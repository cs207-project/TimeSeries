
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E1FCB2EDDF1216D4CA039394CC93A7CE'
    
_lr_action_items = {'OUTPUT':([16,],[22,]),'STRING':([10,12,13,14,15,17,19,21,23,24,26,28,29,30,34,36,37,38,39,41,42,43,44,45,47,50,51,53,54,55,57,],[12,-28,-9,12,-27,-26,-8,12,12,12,12,12,-30,12,-13,12,12,12,12,-11,-21,12,-29,-25,-12,-24,-23,-22,-10,-20,-19,]),'IMPORT':([3,],[9,]),'NUMBER':([10,12,13,14,15,17,19,21,23,24,26,28,29,30,34,36,37,38,39,41,42,43,44,45,47,50,51,53,54,55,57,],[15,-28,-9,15,-27,-26,-8,15,15,15,15,15,-30,15,-13,15,15,15,15,-11,-21,15,-29,-25,-12,-24,-23,-22,-10,-20,-19,]),'$end':([1,2,4,6,7,8,18,20,],[-4,-1,0,-5,-2,-3,-6,-7,]),'OP_MUL':([16,],[23,]),'ASSIGN':([16,],[25,]),'INPUT':([16,],[27,]),'OP_SUB':([16,],[24,]),'LPAREN':([0,1,2,6,7,8,10,12,13,14,15,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,51,53,54,55,57,58,],[3,-4,3,-5,-2,-3,16,-28,-9,16,-27,-26,-6,-8,-7,16,33,16,16,16,33,16,-30,16,-15,33,-13,-17,16,16,16,16,33,-11,-21,16,-29,-25,-14,-12,-24,-23,-22,-10,-20,-19,-16,]),'RBRACE':([12,13,14,15,17,19,34,41,42,45,47,50,51,53,54,55,57,],[-28,-9,20,-27,-26,-8,-13,-11,-21,-25,-12,-24,-23,-22,-10,-20,-19,]),'OP_DIV':([16,],[21,]),'OP_ADD':([16,],[26,]),'RPAREN':([11,12,15,17,22,27,28,29,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,56,57,58,],[18,-28,-27,-26,34,41,42,-30,45,-15,47,-13,-17,50,51,53,54,-11,-21,55,-29,-25,-14,-12,-24,-23,57,-22,-10,-20,58,-19,-16,]),'LBRACE':([0,1,2,6,7,8,18,20,],[5,-4,5,-5,-2,-3,-6,-7,]),'ID':([5,9,10,12,13,14,15,16,17,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,57,58,],[10,11,17,-28,-9,17,-27,28,-26,-8,17,35,17,17,38,17,35,17,-30,17,-15,35,49,-13,-17,17,17,17,17,35,-11,-21,17,-29,-25,-14,-12,56,-18,-24,-23,-22,-10,-20,-19,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration':([22,27,32,40,],[31,31,46,46,]),'import_statement':([0,2,],[1,8,]),'statement_list':([0,],[2,]),'type':([33,],[48,]),'parameter_list':([21,23,24,26,28,],[30,36,37,39,43,]),'declaration_list':([22,27,],[32,40,]),'program':([0,],[4,]),'expression_list':([10,],[14,]),'component':([0,2,],[6,7,]),'expression':([10,14,21,23,24,26,28,30,36,37,38,39,43,],[13,19,29,29,29,29,29,44,44,44,52,44,44,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',12),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',15),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',44),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',45),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',52),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',53),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',60),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',61),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',70),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',71),
  ('type -> ID','type',1,'p_type','parser.py',79),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',83),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',87),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',96),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',100),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',104),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',108),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',116),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',120),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',124),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',125),
]
