
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E1FCB2EDDF1216D4CA039394CC93A7CE'
    
_lr_action_items = {'RPAREN':([11,12,15,17,21,22,24,29,31,32,33,34,35,36,37,38,39,40,41,42,46,47,48,49,50,51,52,53,54,55,56,57,58,],[18,-28,-26,-27,29,34,38,-11,46,-17,-15,-21,-30,48,50,-13,51,52,53,54,-10,-14,-20,-29,-23,-12,-22,-24,-25,57,58,-19,-16,]),'OP_DIV':([16,],[27,]),'NUMBER':([10,12,13,14,15,17,19,22,23,25,26,27,29,34,35,36,37,38,40,41,42,43,46,48,49,50,51,52,53,54,57,],[17,-28,-9,17,-26,-27,-8,17,17,17,17,17,-11,-21,-30,17,17,-13,17,17,17,17,-10,-20,-29,-23,-12,-22,-24,-25,-19,]),'INPUT':([16,],[21,]),'OP_ADD':([16,],[25,]),'IMPORT':([3,],[7,]),'OUTPUT':([16,],[24,]),'ID':([6,7,10,12,13,14,15,16,17,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,],[10,11,15,-28,-9,15,-26,22,-27,-8,32,15,15,32,15,15,15,43,-11,44,32,-17,-15,-21,-30,15,15,-13,32,15,15,15,15,-18,56,-10,-14,-20,-29,-23,-12,-22,-24,-25,-19,-16,]),'STRING':([10,12,13,14,15,17,19,22,23,25,26,27,29,34,35,36,37,38,40,41,42,43,46,48,49,50,51,52,53,54,57,],[12,-28,-9,12,-26,-27,-8,12,12,12,12,12,-11,-21,-30,12,12,-13,12,12,12,12,-10,-20,-29,-23,-12,-22,-24,-25,-19,]),'LPAREN':([0,1,2,4,8,9,10,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,29,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,57,58,],[3,-4,-5,3,-3,-2,16,-28,-9,16,-26,-27,-6,-8,-7,30,16,16,30,16,16,16,-11,30,-17,-15,-21,-30,16,16,-13,30,16,16,16,16,-10,-14,-20,-29,-23,-12,-22,-24,-25,-19,-16,]),'$end':([1,2,4,5,8,9,18,20,],[-4,-5,-1,0,-3,-2,-6,-7,]),'ASSIGN':([16,],[28,]),'RBRACE':([12,13,14,15,17,19,29,34,38,46,48,50,51,52,53,54,57,],[-28,-9,20,-26,-27,-8,-11,-21,-13,-10,-20,-23,-12,-22,-24,-25,-19,]),'OP_MUL':([16,],[26,]),'OP_SUB':([16,],[23,]),'LBRACE':([0,1,2,4,8,9,18,20,],[6,-4,-5,6,-3,-2,-6,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'import_statement':([0,4,],[1,8,]),'component':([0,4,],[2,9,]),'parameter_list':([22,23,25,26,27,],[36,37,40,41,42,]),'expression':([10,14,22,23,25,26,27,36,37,40,41,42,43,],[13,19,35,35,35,35,35,49,49,49,49,49,55,]),'expression_list':([10,],[14,]),'statement_list':([0,],[4,]),'type':([30,],[45,]),'program':([0,],[5,]),'declaration_list':([21,24,],[31,39,]),'declaration':([21,24,31,39,],[33,33,47,47,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',12),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',15),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',44),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',45),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',52),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',53),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',60),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',61),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',70),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',71),
  ('type -> ID','type',1,'p_type','parser.py',79),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',83),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',87),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',96),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',100),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',104),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',108),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',116),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',120),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',124),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',125),
]
