
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BA90F0C8CB04659A4089667E76C36B34'
    
_lr_action_items = {'OUTPUT':([12,],[20,]),'OP_ADD':([12,],[23,]),'LPAREN':([0,2,4,6,7,9,10,11,13,14,15,16,18,19,20,21,22,23,24,25,26,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,57,58,],[3,-4,3,-5,12,-3,-2,12,-9,-27,-28,-26,-7,-8,31,12,12,12,31,12,12,-6,-13,-15,-17,31,-30,12,12,12,-11,31,12,-21,12,12,-12,-14,-29,-23,-25,-22,-10,-20,-24,-19,-16,]),'RBRACE':([11,13,14,15,16,19,29,38,41,46,49,50,51,52,53,54,57,],[18,-9,-27,-28,-26,-8,-13,-11,-21,-12,-23,-25,-22,-10,-20,-24,-19,]),'IMPORT':([3,],[8,]),'RPAREN':([14,15,16,17,20,24,25,29,30,32,33,34,35,36,37,38,39,40,41,42,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-27,-28,-26,28,29,38,41,-13,-15,-17,46,-30,49,50,51,-11,52,53,-21,54,-12,-14,-29,-23,-25,-22,-10,-20,-24,57,58,-19,-16,]),'LBRACE':([0,2,4,6,9,10,18,28,],[1,-4,1,-5,-3,-2,-7,-6,]),'OP_DIV':([12,],[22,]),'STRING':([7,11,13,14,15,16,19,21,22,23,25,26,29,34,35,36,37,38,40,41,42,43,46,48,49,50,51,52,53,54,57,],[15,15,-9,-27,-28,-26,-8,15,15,15,15,15,-13,-30,15,15,15,-11,15,-21,15,15,-12,-29,-23,-25,-22,-10,-20,-24,-19,]),'NUMBER':([7,11,13,14,15,16,19,21,22,23,25,26,29,34,35,36,37,38,40,41,42,43,46,48,49,50,51,52,53,54,57,],[14,14,-9,-27,-28,-26,-8,14,14,14,14,14,-13,-30,14,14,14,-11,14,-21,14,14,-12,-29,-23,-25,-22,-10,-20,-24,-19,]),'ID':([1,7,8,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,],[7,16,17,16,25,-9,-27,-28,-26,-8,32,16,16,16,32,16,16,43,-13,-15,44,-17,32,-30,16,16,16,-11,32,16,-21,16,16,-18,56,-12,-14,-29,-23,-25,-22,-10,-20,-24,-19,-16,]),'$end':([2,4,5,6,9,10,18,28,],[-4,-1,0,-5,-3,-2,-7,-6,]),'ASSIGN':([12,],[27,]),'OP_SUB':([12,],[21,]),'OP_MUL':([12,],[26,]),'INPUT':([12,],[24,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'import_statement':([0,4,],[2,9,]),'declaration':([20,24,33,39,],[30,30,47,47,]),'expression_list':([7,],[11,]),'type':([31,],[45,]),'expression':([7,11,21,22,23,25,26,35,36,37,40,42,43,],[13,19,34,34,34,34,34,48,48,48,48,48,55,]),'declaration_list':([20,24,],[33,39,]),'statement_list':([0,],[4,]),'parameter_list':([21,22,23,25,26,],[35,36,37,40,42,]),'program':([0,],[5,]),'component':([0,4,],[6,10,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',12),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',15),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',44),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',45),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',52),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',53),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',60),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',61),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',70),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',71),
  ('type -> ID','type',1,'p_type','parser.py',79),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',83),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',87),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',96),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',100),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',104),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',108),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',116),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',120),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',124),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',125),
]
