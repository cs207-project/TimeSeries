
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D7D1BCF469A7160DABB9E0C3456A50E8'
    
_lr_action_items = {'OP_MUL':([14,],[26,]),'OP_ADD':([14,],[23,]),'INPUT':([14,],[21,]),'OUTPUT':([14,],[22,]),'LPAREN':([0,2,3,5,8,9,10,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,57,58,],[1,-5,-4,1,-2,-3,14,14,-28,-26,-9,-27,-6,-8,-7,32,32,14,14,14,14,14,-11,32,-15,-17,-13,32,-30,14,14,14,14,14,-21,14,-10,-14,-12,-29,-22,-25,-23,-24,-20,-19,-16,]),'ID':([6,7,10,12,13,14,15,16,17,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,],[10,11,15,15,-28,27,-26,-9,-27,-8,33,33,15,15,15,15,15,43,-11,33,-15,46,-17,-13,33,-30,15,15,15,15,15,-21,15,-10,-14,-18,56,-12,-29,-22,-25,-23,-24,-20,-19,-16,]),'RBRACE':([12,13,15,16,17,19,29,34,42,44,48,50,51,52,53,54,57,],[20,-28,-26,-9,-27,-8,-11,-13,-21,-10,-12,-22,-25,-23,-24,-20,-19,]),'OP_DIV':([14,],[24,]),'LBRACE':([0,2,3,5,8,9,18,20,],[6,-5,-4,6,-2,-3,-6,-7,]),'RPAREN':([11,13,15,17,21,22,27,29,30,31,33,34,35,36,37,38,39,40,41,42,44,45,48,49,50,51,52,53,54,55,56,57,58,],[18,-28,-26,-27,29,34,42,-11,44,-15,-17,-13,48,-30,50,51,52,53,54,-21,-10,-14,-12,-29,-22,-25,-23,-24,-20,57,58,-19,-16,]),'OP_SUB':([14,],[25,]),'IMPORT':([1,],[7,]),'STRING':([10,12,13,15,16,17,19,23,24,25,26,27,29,34,36,37,38,39,40,41,42,43,44,48,49,50,51,52,53,54,57,],[13,13,-28,-26,-9,-27,-8,13,13,13,13,13,-11,-13,-30,13,13,13,13,13,-21,13,-10,-12,-29,-22,-25,-23,-24,-20,-19,]),'$end':([2,3,4,5,8,9,18,20,],[-5,-4,0,-1,-2,-3,-6,-7,]),'ASSIGN':([14,],[28,]),'NUMBER':([10,12,13,15,16,17,19,23,24,25,26,27,29,34,36,37,38,39,40,41,42,43,44,48,49,50,51,52,53,54,57,],[17,17,-28,-26,-9,-27,-8,17,17,17,17,17,-11,-13,-30,17,17,17,17,17,-21,17,-10,-12,-29,-22,-25,-23,-24,-20,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([10,12,23,24,25,26,27,37,38,39,40,41,43,],[16,19,36,36,36,36,36,49,49,49,49,49,55,]),'expression_list':([10,],[12,]),'declaration_list':([21,22,],[30,35,]),'component':([0,5,],[2,8,]),'declaration':([21,22,30,35,],[31,31,45,45,]),'import_statement':([0,5,],[3,9,]),'program':([0,],[4,]),'statement_list':([0,],[5,]),'type':([32,],[47,]),'parameter_list':([23,24,25,26,27,],[37,38,39,40,41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',12),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',15),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',44),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',45),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',52),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',53),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',60),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',61),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',70),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',71),
  ('type -> ID','type',1,'p_type','parser.py',79),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',83),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',87),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',96),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',100),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',104),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',108),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',116),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',120),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',124),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',125),
]
