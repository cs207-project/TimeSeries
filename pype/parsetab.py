
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'B7DA2FE6C22431AB95D14A63E4FE0078'
    
_lr_action_items = {'OP_SUB':([16,],[21,]),'NUMBER':([10,12,13,14,15,17,19,21,22,24,27,28,29,30,31,32,33,36,40,41,42,43,44,45,46,48,50,53,54,55,56,],[12,-27,12,-28,-9,-26,-8,12,12,12,12,12,12,-30,12,12,12,-13,-11,12,-21,12,-23,-29,-25,-24,-12,-10,-22,-20,-19,]),'OP_ADD':([16,],[27,]),'RPAREN':([11,12,14,17,25,26,28,29,30,31,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,56,57,58,],[18,-27,-28,-26,36,40,42,44,-30,46,48,-15,50,-13,-17,53,-11,54,-21,55,-23,-29,-25,56,-24,-14,-12,-10,-22,-20,-19,58,-16,]),'IMPORT':([4,],[9,]),'STRING':([10,12,13,14,15,17,19,21,22,24,27,28,29,30,31,32,33,36,40,41,42,43,44,45,46,48,50,53,54,55,56,],[14,-27,14,-28,-9,-26,-8,14,14,14,14,14,14,-30,14,14,14,-13,-11,14,-21,14,-23,-29,-25,-24,-12,-10,-22,-20,-19,]),'OP_DIV':([16,],[22,]),'ASSIGN':([16,],[23,]),'OP_MUL':([16,],[24,]),'$end':([1,2,3,5,7,8,18,20,],[0,-4,-1,-5,-3,-2,-6,-7,]),'LPAREN':([0,2,3,5,7,8,10,12,13,14,15,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,48,49,50,53,54,55,56,58,],[4,-4,4,-5,-3,-2,16,-27,16,-28,-9,-26,-6,-8,-7,16,16,16,37,37,16,16,16,-30,16,16,16,-15,37,-13,-17,37,-11,16,-21,16,-23,-29,-25,-24,-14,-12,-10,-22,-20,-19,-16,]),'INPUT':([16,],[26,]),'RBRACE':([12,13,14,15,17,19,36,40,42,44,46,48,50,53,54,55,56,],[-27,20,-28,-9,-26,-8,-13,-11,-21,-23,-25,-24,-12,-10,-22,-20,-19,]),'ID':([6,9,10,12,13,14,15,16,17,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,58,],[10,11,17,-27,17,-28,-9,28,-26,-8,17,17,32,17,38,38,17,17,17,-30,17,17,17,-15,38,-13,52,-17,38,-11,17,-21,17,-23,-29,-25,-24,-14,-12,57,-18,-10,-22,-20,-19,-16,]),'OUTPUT':([16,],[25,]),'LBRACE':([0,2,3,5,7,8,18,20,],[6,-4,6,-5,-3,-2,-6,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'expression':([10,13,21,22,24,27,28,29,31,32,33,41,43,],[15,19,30,30,30,30,30,45,45,47,45,45,45,]),'declaration_list':([25,26,],[35,39,]),'import_statement':([0,3,],[2,7,]),'statement_list':([0,],[3,]),'declaration':([25,26,35,39,],[34,34,49,49,]),'type':([37,],[51,]),'component':([0,3,],[5,8,]),'parameter_list':([21,22,24,27,28,],[29,31,33,41,43,]),'expression_list':([10,],[13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',12),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',15),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',44),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',45),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',52),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',53),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',60),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',61),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',70),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',71),
  ('type -> ID','type',1,'p_type','parser.py',79),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',83),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',87),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',96),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',100),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',104),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',108),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',116),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',120),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',124),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',125),
]
