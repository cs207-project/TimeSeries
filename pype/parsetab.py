
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E1FCB2EDDF1216D4CA039394CC93A7CE'
    
_lr_action_items = {'OP_SUB':([11,],[18,]),'ASSIGN':([11,],[20,]),'STRING':([9,12,13,14,15,16,18,22,23,24,25,26,29,30,35,36,38,39,40,41,42,43,44,45,47,51,52,53,54,55,57,],[12,-28,12,-27,-26,-9,12,12,12,12,12,-8,12,-30,-11,12,-13,12,12,12,12,-21,-29,-23,-10,-12,-22,-25,-24,-20,-19,]),'INPUT':([11,],[19,]),'LPAREN':([0,2,3,6,7,8,9,12,13,14,15,16,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,51,52,53,54,55,57,58,],[5,5,-5,-4,-2,-3,11,-28,11,-27,-26,-9,11,34,34,11,11,11,11,-8,-7,-6,11,-30,-17,34,-15,-11,11,34,-13,11,11,11,11,-21,-29,-23,-14,-10,-12,-22,-25,-24,-20,-19,-16,]),'IMPORT':([5,],[10,]),'LBRACE':([0,2,3,6,7,8,27,28,],[4,4,-5,-4,-2,-3,-7,-6,]),'OUTPUT':([11,],[21,]),'OP_ADD':([11,],[22,]),'OP_DIV':([11,],[23,]),'OP_MUL':([11,],[24,]),'NUMBER':([9,12,13,14,15,16,18,22,23,24,25,26,29,30,35,36,38,39,40,41,42,43,44,45,47,51,52,53,54,55,57,],[14,-28,14,-27,-26,-9,14,14,14,14,14,-8,14,-30,-11,14,-13,14,14,14,14,-21,-29,-23,-10,-12,-22,-25,-24,-20,-19,]),'ID':([4,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,57,58,],[9,15,17,25,-28,15,-27,-26,-9,15,31,36,31,15,15,15,15,-8,15,-30,-17,31,-15,48,-11,15,31,-13,15,15,15,15,-21,-29,-23,-14,-10,-18,56,-12,-22,-25,-24,-20,-19,-16,]),'RBRACE':([12,13,14,15,16,26,35,38,43,45,47,51,52,53,54,55,57,],[-28,27,-27,-26,-9,-8,-11,-13,-21,-23,-10,-12,-22,-25,-24,-20,-19,]),'$end':([1,2,3,6,7,8,27,28,],[0,-1,-5,-4,-2,-3,-7,-6,]),'RPAREN':([12,14,15,17,19,21,25,29,30,31,32,33,35,37,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,56,57,58,],[-28,-27,-26,28,35,38,43,45,-30,-17,47,-15,-11,51,-13,52,53,54,55,-21,-29,-23,-14,-10,57,-12,-22,-25,-24,-20,58,-19,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'type':([34,],[49,]),'declaration':([19,21,32,37,],[33,33,46,46,]),'program':([0,],[1,]),'statement_list':([0,],[2,]),'parameter_list':([18,22,23,24,25,],[29,39,40,41,42,]),'component':([0,2,],[3,7,]),'declaration_list':([19,21,],[32,37,]),'expression':([9,13,18,22,23,24,25,29,36,39,40,41,42,],[16,26,30,30,30,30,30,44,50,44,44,44,44,]),'expression_list':([9,],[13,]),'import_statement':([0,2,],[6,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',12),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',15),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',44),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',45),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',52),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',53),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',60),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',61),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',70),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',71),
  ('type -> ID','type',1,'p_type','parser.py',79),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',83),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',87),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',96),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',100),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',104),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',108),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',116),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',120),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',124),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',125),
]
