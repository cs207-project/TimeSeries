
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '55C53B9434ED5FC68BBE31AE8D09ED67'
    
_lr_action_items = {'OUTPUT':([15,],[21,]),'OP_ADD':([15,],[25,]),'NUMBER':([8,12,13,14,16,17,19,22,23,25,27,28,33,34,35,36,37,38,39,41,42,43,45,48,49,50,52,53,54,55,57,],[16,16,-26,-9,-27,-28,-8,16,16,16,16,16,-13,16,-21,-30,16,16,16,-11,16,16,-12,-20,-29,-23,-22,-10,-24,-25,-19,]),'$end':([1,2,5,6,9,10,18,20,],[-5,0,-4,-1,-2,-3,-6,-7,]),'OP_SUB':([15,],[23,]),'RBRACE':([12,13,14,16,17,19,33,35,41,45,48,50,52,53,54,55,57,],[20,-26,-9,-27,-28,-8,-13,-21,-11,-12,-20,-23,-22,-10,-24,-25,-19,]),'ASSIGN':([15,],[24,]),'INPUT':([15,],[26,]),'OP_MUL':([15,],[27,]),'IMPORT':([3,],[7,]),'LPAREN':([0,1,5,6,8,9,10,12,13,14,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,52,53,54,55,57,58,],[3,-5,-4,3,15,-2,-3,15,-26,-9,-27,-28,-6,-8,-7,32,15,15,15,32,15,15,32,-17,-15,-13,15,-21,-30,15,15,15,32,-11,15,15,-14,-12,-20,-29,-23,-22,-10,-24,-25,-19,-16,]),'RPAREN':([11,13,16,17,21,22,26,29,30,31,33,34,35,36,37,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,],[18,-26,-27,-28,33,35,41,45,-17,-15,-13,48,-21,-30,50,52,53,-11,54,55,-14,-12,-20,-29,-23,57,-22,-10,-24,-25,58,-19,-16,]),'OP_DIV':([15,],[28,]),'LBRACE':([0,1,5,6,9,10,18,20,],[4,-5,-4,4,-2,-3,-6,-7,]),'STRING':([8,12,13,14,16,17,19,22,23,25,27,28,33,34,35,36,37,38,39,41,42,43,45,48,49,50,52,53,54,55,57,],[17,17,-26,-9,-27,-28,-8,17,17,17,17,17,-13,17,-21,-30,17,17,17,-11,17,17,-12,-20,-29,-23,-22,-10,-24,-25,-19,]),'ID':([4,7,8,12,13,14,15,16,17,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,57,58,],[8,11,13,13,-26,-9,22,-27,-28,-8,30,13,13,38,13,30,13,13,30,-17,-15,46,-13,13,-21,-30,13,13,13,30,-11,13,13,-14,-12,-18,56,-20,-29,-23,-22,-10,-24,-25,-19,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_list':([8,],[12,]),'component':([0,6,],[1,9,]),'parameter_list':([22,23,25,27,28,],[34,37,39,42,43,]),'program':([0,],[2,]),'declaration':([21,26,29,40,],[31,31,44,44,]),'type':([32,],[47,]),'import_statement':([0,6,],[5,10,]),'declaration_list':([21,26,],[29,40,]),'statement_list':([0,],[6,]),'expression':([8,12,22,23,25,27,28,34,37,38,39,42,43,],[14,19,36,36,36,36,36,49,49,51,49,49,49,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',12),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',15),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',44),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',45),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',52),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',53),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',60),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',61),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',70),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',71),
  ('type -> ID','type',1,'p_type','parser.py',79),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',83),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',87),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',96),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',100),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',104),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',108),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',116),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',120),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',124),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',125),
]
