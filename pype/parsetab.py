
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D7D1BCF469A7160DABB9E0C3456A50E8'
    
_lr_action_items = {'LBRACE':([0,2,5,6,9,10,18,28,],[1,-5,-4,1,-2,-3,-7,-6,]),'OUTPUT':([15,],[20,]),'OP_ADD':([15,],[25,]),'INPUT':([15,],[21,]),'IMPORT':([4,],[8,]),'ASSIGN':([15,],[22,]),'RPAREN':([13,14,16,17,20,21,24,29,30,32,33,34,35,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,],[-28,-26,-27,28,32,35,39,44,-17,-13,-15,48,-11,-30,50,-21,52,53,54,55,-12,-14,-10,57,-24,-29,-20,-22,-25,-23,58,-19,-16,]),'RBRACE':([11,12,13,14,16,19,32,35,39,44,48,50,52,53,54,55,57,],[-9,18,-28,-26,-27,-8,-13,-11,-21,-12,-10,-24,-20,-22,-25,-23,-19,]),'$end':([2,3,5,6,9,10,18,28,],[-5,0,-4,-1,-2,-3,-7,-6,]),'OP_MUL':([15,],[23,]),'ID':([1,7,8,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,57,58,],[7,14,17,-9,14,-28,-26,24,-27,-8,30,30,36,14,14,14,14,14,30,-17,46,-13,-15,30,-11,14,-30,14,-21,14,14,14,14,-12,-14,-18,56,-10,-24,-29,-20,-22,-25,-23,-19,-16,]),'LPAREN':([0,2,5,6,7,9,10,11,12,13,14,16,18,19,20,21,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,51,52,53,54,55,57,58,],[4,-5,-4,4,15,-2,-3,-9,15,-28,-26,-27,-7,-8,31,31,15,15,15,15,15,-6,31,-17,-13,-15,31,-11,15,-30,15,-21,15,15,15,15,-12,-14,-10,-24,-29,-20,-22,-25,-23,-19,-16,]),'NUMBER':([7,11,12,13,14,16,19,23,24,25,26,27,32,35,36,37,38,39,40,41,42,43,44,48,50,51,52,53,54,55,57,],[16,-9,16,-28,-26,-27,-8,16,16,16,16,16,-13,-11,16,-30,16,-21,16,16,16,16,-12,-10,-24,-29,-20,-22,-25,-23,-19,]),'OP_DIV':([15,],[26,]),'STRING':([7,11,12,13,14,16,19,23,24,25,26,27,32,35,36,37,38,39,40,41,42,43,44,48,50,51,52,53,54,55,57,],[13,-9,13,-28,-26,-27,-8,13,13,13,13,13,-13,-11,13,-30,13,-21,13,13,13,13,-12,-10,-24,-29,-20,-22,-25,-23,-19,]),'OP_SUB':([15,],[27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([7,12,23,24,25,26,27,36,38,40,41,42,43,],[11,19,37,37,37,37,37,49,51,51,51,51,51,]),'declaration_list':([20,21,],[29,34,]),'expression_list':([7,],[12,]),'component':([0,6,],[2,9,]),'parameter_list':([23,24,25,26,27,],[38,40,41,42,43,]),'program':([0,],[3,]),'import_statement':([0,6,],[5,10,]),'type':([31,],[47,]),'statement_list':([0,],[6,]),'declaration':([20,21,29,34,],[33,33,45,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',12),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',15),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',30),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',34),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',35),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',44),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',45),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',52),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',53),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',60),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',61),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',70),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',71),
  ('type -> ID','type',1,'p_type','parser.py',79),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',83),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_parameter_list','parser.py',87),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_parameter_list','parser.py',88),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',96),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',100),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',104),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',108),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',116),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',120),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',124),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',125),
]
